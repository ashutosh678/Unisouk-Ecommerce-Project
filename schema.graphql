# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Category {
  createdAt: DateTimeISO!
  description: String!
  id: ID!
  name: String!
  products: [Product!]!
  updatedAt: DateTimeISO!
}

input CategoryInput {
  description: String!
  name: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Mutation {
  createCategory(data: CategoryInput!): Category!
  createOrder(items: [OrderItemInput!]!): Order!
  createProduct(data: ProductInput!): Product!
  deleteCategory(id: ID!): Boolean!
  deleteProduct(id: ID!): Boolean!
  login(email: String!, password: String!): String!
  register(data: RegisterUserInput!): User!
  updateCategory(data: CategoryInput!, id: ID!): Category!
  updateOrderStatus(data: UpdateOrderStatusInput!): Order!
  updateProduct(data: ProductInput!, id: ID!): Product!
  updateUserRole(data: UpdateUserRoleInput!): User!
}

type Order {
  createdAt: DateTimeISO!
  id: ID!
  items: [OrderItem!]!
  status: String!
  totalAmount: Float!
  updatedAt: DateTimeISO!
  user: User!
}

type OrderItem {
  createdAt: DateTimeISO!
  id: ID!
  order: Order!
  product: Product!
  quantity: Float!
  unitPrice: Float!
  updatedAt: DateTimeISO!
}

input OrderItemInput {
  productId: String!
  quantity: Float!
}

type Product {
  category: Category!
  createdAt: DateTimeISO!
  description: String!
  id: ID!
  inventory: Float!
  name: String!
  orderItems: [OrderItem!]!
  price: Float!
  updatedAt: DateTimeISO!
}

input ProductInput {
  categoryId: ID!
  description: String!
  inventory: Float!
  name: String!
  price: Float!
}

type Query {
  categories: [Category!]!
  category(id: ID!): Category!
  me: User!
  order(id: ID!): Order!
  orders: [Order!]!
  product(id: ID!): Product!
  products: [Product!]!
  users: [User!]!
}

input RegisterUserInput {
  email: String!
  firstName: String!
  lastName: String!
  password: String!
}

input UpdateOrderStatusInput {
  id: ID!
  status: String!
}

input UpdateUserRoleInput {
  id: ID!
  role: String!
}

type User {
  createdAt: DateTimeISO!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  orders: [Order!]!
  role: String!
  updatedAt: DateTimeISO!
}